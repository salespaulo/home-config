#!/bin/sh
###########################################################################
# .bashrc_func                                                            #
# @author Paulo R. A. Sales.                                              #
# Define as funcoes de ambiente que o bashrc utiliza e que o usuario tb.  #
###########################################################################

#Carregando funcoes utilitarias
[ -f $HOME/home/bin/utils_func.sh ] && source ~/home/bin/utils_func.sh

## FUNCOES ##

# Funcao zueira para gerar numeros para megasena!
megasena () {
  for num in 1 2 3 4 5 6;
  do
    echo -n "$( expr $RANDOM % 60 ) ";
  done && echo ""
}

############################################################################
#rm_dir 	 		                                           #
#Remove todas as pastas com nome da pasta passada como parametro recursivo #
############################################################################
function rm_dir() {
  ERROR="Usage rm_dir [dir]\n[dir]\n\tPasta que deve ser excluida, ex.: CVS, .svn"

  if [ "${#}" -lt 1 ]
  then
    infoalert ${ERROR}
    return ${RET_ERROR}
  fi

  silentexec -n "rm -rf `find . -type d -name "${1}"`" "Excluindo... [${1}]"
}

############################################################################
#Funcao para calcular cpf pelo dia										   #
############################################################################
function cpf()
{
  data=`date +%d%m%y`
  echo "DATA: $data"
  #se estiver vazio
  if [ -z "$1" ]
  then
    calcCpf $data 10
  else
    calcCpf $data $1
  fi
}

############################################################################
#Encontra o termo passado nos jars                                         #
############################################################################
function findjars() {
if [ "${1:0:1}" = "-" ]
then
  GREP_OPTS=$1
  shift
else
  GREP_OPTS=
fi

for arg in $*
do
  for d in .
  do
    echo -e "\033[33;1m===== Procurando ${arg} em ${d} =====\033[m "
    for file in `find ${d} -type f \( -name "*.jar" \)`
    do
      echo ${file}
      jar -tvf ${file} | grep ${GREP_OPTS} ${arg}
    done
  done
  echo
done
  }

